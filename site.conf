-- This is an example site configuration for Gluon v2016.1.5
---- Take a look at the documentation located at
-- http://gluon.readthedocs.org/ for details.--
-- This configuration will not work as it. You're required to make-- community specific changes to it!{
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'Giv mig et navn',

  -- Name of the community.
  site_name = 'Freemesh Denmark',

  -- Shorthand of the community.
  site_code = 'fmdk',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.212.0.0/20', -- 10.212.0.1 - 10.212.15.254, 255.255.240.0
  prefix6 = 'fdf4:a50a:5c1f::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {'gw0.ntp.fmdk'},

  -- Wireless regulatory domain of your community.
  regdom = 'EU',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,

    -- ESSID used for client network.
    ap = {
      ssid = 'freemesh.dk',
      -- disabled = true, (optional)
    },

    mesh = {
      id = '03:ca:ff:ee:ba:be',
      mcast_rate = 12000,
      -- disabled = true, (optional)
    },
    -- we don't support old 802.11b data rates, they waste airtime
    supported_rates = {6000, 9000, 12000, 18000, 24000, 36000, 48000, 54000},
    basic_rate = {6000, 9000, 18000, 36000, 54000},
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel.
  wifi5 = {
    channel = 44,
    ap = {
      ssid = 'freemesh.dk',
    },
    mesh = {
      id = '03:ca:ff:ee:ba:be',
      mcast_rate = 12000,
    },
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.212.15.254',
    ip6 = 'fdf4:a50a:5c1f:ffff::127',

    -- anycast MAC of all nodes
    mac = '36:f4:54:fc:e5:88',
  },

  -- Options specific to routing protocols (optional)
  -- mesh = {
    -- Options specific to the batman-adv routing protocol (optional)
    -- batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      -- gw_sel_class = 1,
    -- },
  -- },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.
  fastd_mesh_vpn = {
    -- List of crypto-methods to use.
    methods = {'salsa2012+umac'},
    enabled = true,
    -- configurable = true,

    mtu = 1280,
    groups = {
      backbone = {
        -- Limit number of connected peers to reduce bandwidth.
        limit = 2, -- shoud be changed to 1 if you have more than 50 nodes (next firmware update! )
        -- List of peers.
        peers = {
          fmdk_gw0 = {
            -- generate with `fastd --generate-key`
            key = '51fcca01b53b858ed5af1789de28faebdcea32f21dca489d020b6f18e0d2ef64',
            -- You can also omit the ipv4 to allow both connection via ipv4 and ipv6
            remotes = {'ipv4 "gw0.freemesh.dk" port 11280'},
          },
          fmdk_gw1 = {
            key = 'd9a8173bf8f2db3e74fb5c97064de141f5e87e9ec0d77ed968275f518cc52255',
            remotes = {'ipv4 "gw1.freemesh.dk" port 11280'},
          },
          fmdk_gw2 = {
            key = '1c72cdcbcfae537e108b62a99637eec896e3b5d7d0e75ce5006d1218c214727c',
            remotes = {'ipv4 "gw2.freemesh.dk" port 12562'},
          },
          fmdk_gw3 = {
            key = '7ff5f2190b7b82904f75c6992b2f4919b59afebab96fc3cfde6b6a011cdc2339',
            remotes = {'ipv4 "freemesh.varum.dk" port 12562'},
          },
          fmdk_gw4 = {
            key = 'bdea4ebb63be65d83b197c6317b32499e78038805067a144b6c899a921f68815',
            remotes = {'ipv4 "freemesh.in-kiel.de" port 11280'},
          },
        },

        -- Optional: nested peer groups
        -- groups = {
        --   backbone_sub = {
        --     ...
        --   },
        --   ...
        -- },
      },
      -- Optional: additional peer groups, possibly with other limits
      -- backbone2 = {
      --   ...
      -- },
    },

    bandwidth_limit = {
      -- The bandwidth limit can be enabled by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      egress = 800,

      -- Default download limit (kbit/s).
      ingress = 5000,
    },
  },

  autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'stable', -- change to experimental branch if you don't want all stabel nodes to take this firmware

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {'http://1.updates.fmdk/stable/sysupgrade'},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1, -- The number of people there need to sign the package

        -- List of public keys of maintainers. (ecdsautils)
        pubkeys = {
          'bf0ae50562378d005e5286345ead7c6e238fd976d91628f7ce3a7258ef97d12f', -- Dennis
          'ab08fa8a1f8825a410f81517eaad00c39004fd502ffacc6d73cc2000c80e68a9', -- Robin
        },
      },
    },
 },

  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

  -- Skip setup mode (config mode) on first boot
  -- setup_mode = {
  --  skip = true,
  -- },}

  owner = {
    obligatory = true
  },
}
